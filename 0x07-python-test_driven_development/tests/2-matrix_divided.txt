This is the test for the "matrix_divided" module
================================================
Not a list of list
=================================================
>>> matrix_divided = __import__("2-matrix_divided").matrix_divided
>>> my_setrix = [{5, 5, 5}, {5, 5, 5}]
>>> matrix_divided(my_setrix, 5)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

List having non-integer values
============================================
>>> my_matrix = [[True, 6, 5], [6, 5, 6]]
>>> matrix_divided(my_matrix, 5)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

Unequal length of lists
===================================
>>> my_matrix = [[5, 6, 6.4], [5, 5, 5, 5, 6]]
>>> matrix_divided(my_matrix, 6)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size

Division not by an integer or float
====================================
>>> my_matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(my_matrix, True)
Traceback (most recent call last):
...
TypeError: div must be a number

Division by zero
================================
>>> my_matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(my_matrix, 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero

Correct requirements
====================================
>>> my_matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(my_matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
